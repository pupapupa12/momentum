> 2.0 Your First JS Project

브라우저 - 'html'형식 파일 열기 (css/js 열려도 원하는 효과 사용X)
html에 두개의 엔진이 돌아감(현재는 css+js)

js -> function 사용 (ex.alret...)

;  ----------------------------------------

> 2.1 Basic Data Types

데이터타입 (value 값)
    1. integer - full number(정수) / ex.1,2,3..
    2. float - 함수? / ex.1.5
    3. string "" -> 큰 따옴표 안의 text

;  ----------------------------------------

> 2.2 Variable

console.log() -> ()괄호 안에 들어가는 것을 프린트/출력(=log)하여 콘솔에 나타냄
    --> ()안에 데이터타입 기입 가능 
        --> 단일 한가지의 타입만 기입 가능 

variable (var) = 값을 저장하거나 유지하는 역할 
constant (const) = 상수 / 바뀌지 않는 값 
    -> var을 사용하기 위해 const를 사용해야함
    --> const > variable한 값 (의미 작성)
    ---> const => syntax
    
Javascript => 카멜표기명

;  ----------------------------------------

> 2.3 const and let

variable을 쓸수 있는 2가지 방법
    1. const : 변할 수 없음
    2. let : 변할 수 있음
        -> 하단에 재지정 가능 (코드는 위에서부터 아래로 읽히면서 적용됨)
    3. var : 보호를 받지 못함 / 오류사항 검수 불가 (컴퓨터가 인식 x)
    ------> 'const'를 기본적으로 사용 / 'let' 필요할 떄 사용 (업데이트 해야 할 내용일 경우) / 'var' 절대 사용x

;  ----------------------------------------

> 2.4 booleans

booleans = true / false (0=off/1=on)
    ->"" 큰 따옴표 안에 작성 XXX
    -> ex. const amIFat = true; (O)
    -> ex. const amIFat = "true"; (X)

null = nothing(아무 것도 없음/비어있음)
    -> text도 아니고 null 그 자체로 씀
    -> undefined와 다름 (undefined = 값이 지정되어있지 않음을 뜻함)
    -> 자연발생적으로 발생 X

;  ----------------------------------------

> 2.5 Arrays

arrays 사용 규칙
    1. 시작과 끝에 []대괄호 사용
    2. 각각의 항목은 ,쉼표로 분리되어야 함
        -> 항목은 숫자,string, boolean, null 등 전부 작성 가능
    3. array 안의 데이터에 접근하려면 'console.log(variable 이름)[3]' <-얻고 싶은 항목의 번호 기입
        -> variable 이름 = 지정한 array 이름
        -> 컴퓨터는 숫자를 '0'부터 셈 (숫자 지정 시 '0'고려하고 작성)

array 안에 항목/내용을 추가하려면 'push' 사용
    -> '지정한 array 이름.push()' <- 추가하려는 내용
    -> 추가 후 하단에 console.log 한번 더 출력 
        (상단의 같은 지정이름의 호출해도 추가 된 값은 하단의 코드에만 적용됨)
